plugins {
    id 'scala'
    id "io.gatling.gradle" version "3.8.4"
}

version '1.1.3'

repositories {
    mavenCentral()
}

ext {
    reflectionsVersion= "0.9.12"
    scalaVersion = "2.12"
    akkaVersion = "2.5.3"
}

dependencies {
    gatling "org.reflections:reflections:${reflectionsVersion}"
    testCompile "io.gatling:gatling-app:3.8.4"
    testCompile "io.gatling.highcharts:gatling-charts-highcharts:3.8.4"
    compile "org.scala-lang:scala-library:${scalaVersion}"
    compile "com.typesafe.akka:akka-actor_${scalaVersion}:${akkaVersion}"
    compile "com.typesafe.akka:akka-testkit_${scalaVersion}:${akkaVersion}"
    testCompile "org.scalatest:scalatest_${scalaVersion}:3.0.3"
}

ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false

sourceSets {
    test {
        scala.srcDirs = ["src/test/scala"]
        resources.srcDirs = ["src/test/resources"]
    }

}

configurations {
    fatJarDependencies.extendsFrom gatling
}

task fatJar(type: Jar, dependsOn: ['gatlingClasses', 'processResources']) {
    group =  "build"
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Main-Class': 'io.gatling.app.Gatling'
    }

    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    archiveClassifier = "all"

    from files(sourceSets.test.output.classesDirs)
    from files(sourceSets.test.resources.collect())
    from {
        configurations['fatJarDependencies']
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

tasks.named("jar") { finalizedBy("fatJar") }
